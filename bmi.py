# -*- coding: utf-8 -*-
"""
Created on Thu May 10 2025
@author:  Don Waldron
"""
import sys
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow

# Class Ui_MainWindow is autogenerated from QT Designer
from Ui_MainWin import Ui_MainWindow

# Instantiate an object of class Ui_MainWindow
BmiGui = Ui_MainWindow()

# Application data
# BMI limits and classification arrays
bmi_limits   = [16.0, 18.5, 25.0, 30.0, 35.0, 40.0]

bmi_descript = ['Severely Underweight', \
                'Underweight', \
                'NORMAL Health Weight', \
                'Overweight', \
                'Obese Class I', \
                'Obese Class II',\
                'Obese Class III']
                
BMI_ENGLISH_UNIT_FACTOR = 703
  


#############################################################################              
# Callback function for the CalcBmi button
#############################################################################              
def pushbutton_calc_bmi_clicked_callback():
   

   height_in_inches = 12.0 * BmiGui.spinBox_Height_Feet.value() + \
                             BmiGui.doubleSpinBox_Height_Inches.value()

   weight = 1.0 * BmiGui.doubleSpinBox_Weight.value()
   bmi = (weight/(height_in_inches*height_in_inches))*BMI_ENGLISH_UNIT_FACTOR
   
   BmiGui.statusBar.clearMessage()
   
   for i in range (len(bmi_limits)): 
       if bmi <= bmi_limits[i]:
          status_bar_string = "BMI = %10.1f" % bmi + "   " + bmi_descript[i]
          BmiGui.statusBar.showMessage(status_bar_string)
          break
   
   bmi_string =  "%10.1f" % bmi 
   BmiGui.textBrowser_BmiResults.setText(bmi_string)     


############################################################################
# Show the main window created by QT Designer, bind the callback to a button
# and Display the MAin Window
# ind callback to 
############################################################################
def run_app(argv): 

   app        = QApplication(sys.argv)
   MainWindow = QMainWindow()
   BmiGui.setupUi(MainWindow)
   
   # Bind events to call-backs
   BmiGui.pushButton_CalculateBmi.clicked.\
                     connect(pushbutton_calc_bmi_clicked_callback)

   # Display the GUI
   MainWindow.show()
   
   app.exec_()


############################################################################
# This the the MAIN file, which is executed first
############################################################################
if __name__ == '__main__':
    
    # Run the application
    run_app(sys.argv)
    sys.exit()

